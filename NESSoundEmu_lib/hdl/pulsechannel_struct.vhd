--
-- VHDL Architecture audiotest_lib.pulsechannel.struct
--
-- Created:
--          by - redacted.redacted (pc023)
--          at - 14:20:13 02/02/24
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2022.3 Built on 14 Jul 2022 at 13:56:12
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
--USE ieee.std_logic_arith.all;
--USE IEEE.numeric_std.all;
library audiotest_lib; use audiotest_lib.booleanvectors.all;


ARCHITECTURE struct OF pulsechannel IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL constvol        : boolean;
   SIGNAL cperiod         : boolean_vector(10 DOWNTO 0);
   SIGNAL length          : boolean_vector(4 DOWNTO 0);
   SIGNAL lengthctren     : boolean;
   SIGNAL loadperiod      : boolean;
   SIGNAL loopenvelope    : boolean;
   SIGNAL mute3           : boolean;
   SIGNAL mutingMix       : boolean;
   SIGNAL period          : boolean_vector(10 DOWNTO 0);
   SIGNAL pulseduty       : boolean_vector(1 DOWNTO 0);
   SIGNAL pulsetimerq     : boolean_vector(10 DOWNTO 0);
   SIGNAL q               : boolean;
   SIGNAL restartenv      : boolean;
   SIGNAL restartsequence : boolean;
   SIGNAL startenv        : boolean;
   SIGNAL sweepen         : boolean;
   SIGNAL sweepnegate     : boolean;
   SIGNAL sweepreload     : boolean;
   SIGNAL sweepshcnt      : boolean_vector(2 DOWNTO 0);
   SIGNAL sweeptickperiod : boolean_vector(2 DOWNTO 0);
   SIGNAL volume          : boolean_vector(3 DOWNTO 0);
   SIGNAL volumeset       : boolean_vector(3 DOWNTO 0);
   SIGNAL wrlength        : boolean;

   -- Implicit buffer signal declarations
   SIGNAL leniszero_internal : boolean;


   -- Component Declarations
   COMPONENT premixer
   PORT (
      mute1  : IN     boolean ;
      mute2  : IN     boolean ;
      mute3  : IN     boolean ;
      q      : IN     boolean ;
      volume : IN     boolean_vector (3 DOWNTO 0);
      mixed  : OUT    boolean_vector (3 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT psweep
   GENERIC (
      SUBOFFSET : integer := 0
   );
   PORT (
      clk             : IN     std_logic ;
      hfclk           : IN     boolean ;
      loadperiod      : IN     boolean ;
      period          : IN     boolean_vector (10 DOWNTO 0);
      pulsetimerq     : IN     boolean_vector (10 DOWNTO 0);
      res_n           : IN     std_logic ;
      sweepen         : IN     boolean ;
      sweepnegate     : IN     boolean ;
      sweepreload     : IN     boolean ;
      sweepshcnt      : IN     boolean_vector (2 DOWNTO 0);
      sweeptickperiod : IN     boolean_vector (2 DOWNTO 0);
      cperiod         : OUT    boolean_vector (10 DOWNTO 0);
      mutingMix       : OUT    boolean 
   );
   END COMPONENT;
   COMPONENT pulsedividersequence
   PORT (
      apuclk          : IN     boolean ;
      clk             : IN     std_logic ;
      cperiod         : IN     boolean_vector (10 DOWNTO 0);
      pulseduty       : IN     boolean_vector (1 DOWNTO 0);
      res_n           : IN     std_logic ;
      restartsequence : IN     boolean ;
      pulsetimerq     : OUT    boolean_vector (10 DOWNTO 0);
      q               : OUT    boolean 
   );
   END COMPONENT;
   COMPONENT pulseenv
   PORT (
      clk          : IN     std_logic ;
      constvol     : IN     boolean ;
      loopenvelope : IN     boolean ;
      qfclk        : IN     boolean ;
      res_n        : IN     std_logic ;
      restartenv   : IN     boolean ;
      startenv     : IN     boolean ;
      volumeset    : IN     boolean_vector (3 DOWNTO 0);
      volume       : OUT    boolean_vector (3 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT pulselentghunit
   GENERIC (
      INITOFFSET : integer := 0
   );
   PORT (
      clk         : IN     std_logic ;
      fclk        : IN     boolean ;
      length      : IN     boolean_vector (4 DOWNTO 0);
      lengthctren : IN     boolean ;
      res_n       : IN     std_logic ;
      wrlength    : IN     boolean ;
      iszero      : OUT    boolean 
   );
   END COMPONENT;
   COMPONENT pulsewriteport2
   PORT (
      addr            : IN     boolean_vector (1 DOWNTO 0);
      clk             : IN     std_logic ;
      data            : IN     boolean_vector (7 DOWNTO 0);
      enabled         : IN     boolean ;
      res_n           : IN     std_logic ;
      wr              : IN     boolean ;
      constvol        : OUT    boolean ;
      length          : OUT    boolean_vector (4 DOWNTO 0);
      lengthctren     : OUT    boolean ;
      loadperiod      : OUT    boolean ;
      loopenvelope    : OUT    boolean ;
      mute3           : OUT    boolean ;
      period          : OUT    boolean_vector (10 DOWNTO 0);
      pulseduty       : OUT    boolean_vector (1 DOWNTO 0);
      restartenv      : OUT    boolean ;
      restartsequence : OUT    boolean ;
      startenv        : OUT    boolean ;
      sweepen         : OUT    boolean ;
      sweepnegate     : OUT    boolean ;
      sweepreload     : OUT    boolean ;
      sweepshcnt      : OUT    boolean_vector (2 DOWNTO 0);
      sweeptickperiod : OUT    boolean_vector (2 DOWNTO 0);
      volumeset       : OUT    boolean_vector (3 DOWNTO 0);
      wrlength        : OUT    boolean 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : premixer USE ENTITY audiotest_lib.premixer;
   FOR ALL : psweep USE ENTITY audiotest_lib.psweep;
   FOR ALL : pulsedividersequence USE ENTITY audiotest_lib.pulsedividersequence;
   FOR ALL : pulseenv USE ENTITY audiotest_lib.pulseenv;
   FOR ALL : pulselentghunit USE ENTITY audiotest_lib.pulselentghunit;
   FOR ALL : pulsewriteport2 USE ENTITY audiotest_lib.pulsewriteport2;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_4 : premixer
      PORT MAP (
         mute1  => leniszero_internal,
         mute2  => mutingMix,
         mute3  => mute3,
         q      => q,
         volume => volume,
         mixed  => mixed
      );
   U_0 : psweep
      PORT MAP (
         clk             => clk,
         hfclk           => hfclk,
         loadperiod      => loadperiod,
         period          => period,
         pulsetimerq     => pulsetimerq,
         res_n           => res_n,
         sweepen         => sweepen,
         sweepnegate     => sweepnegate,
         sweepreload     => sweepreload,
         sweepshcnt      => sweepshcnt,
         sweeptickperiod => sweeptickperiod,
         cperiod         => cperiod,
         mutingMix       => mutingMix
      );
   U_2 : pulsedividersequence
      PORT MAP (
         apuclk          => apuclk,
         clk             => clk,
         cperiod         => cperiod,
         pulseduty       => pulseduty,
         res_n           => res_n,
         restartsequence => restartsequence,
         pulsetimerq     => pulsetimerq,
         q               => q
      );
   puenv : pulseenv
      PORT MAP (
         clk          => clk,
         constvol     => constvol,
         loopenvelope => loopenvelope,
         qfclk        => qfclk,
         res_n        => res_n,
         restartenv   => restartenv,
         startenv     => startenv,
         volumeset    => volumeset,
         volume       => volume
      );
   U_3 : pulselentghunit
      PORT MAP (
         clk         => clk,
         fclk        => fclk,
         length      => length,
         lengthctren => lengthctren,
         res_n       => res_n,
         wrlength    => wrlength,
         iszero      => leniszero_internal
      );
   U_1 : pulsewriteport2
      PORT MAP (
         addr            => addr,
         clk             => clk,
         data            => data,
         enabled         => enabled,
         res_n           => res_n,
         wr              => wr,
         constvol        => constvol,
         length          => length,
         lengthctren     => lengthctren,
         loadperiod      => loadperiod,
         loopenvelope    => loopenvelope,
         mute3           => mute3,
         period          => period,
         pulseduty       => pulseduty,
         restartenv      => restartenv,
         restartsequence => restartsequence,
         startenv        => startenv,
         sweepen         => sweepen,
         sweepnegate     => sweepnegate,
         sweepreload     => sweepreload,
         sweepshcnt      => sweepshcnt,
         sweeptickperiod => sweeptickperiod,
         volumeset       => volumeset,
         wrlength        => wrlength
      );

   -- Implicit buffered output assignments
   leniszero <= leniszero_internal;

END struct;

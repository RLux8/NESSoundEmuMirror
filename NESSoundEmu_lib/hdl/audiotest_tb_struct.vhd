--
-- VHDL Architecture audiotest_lib.audiotest_TB.struct
--
-- Created:
--          by - redacted.redacted (pc025)
--          at - 16:56:39 12/18/23
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2022.3 Built on 14 Jul 2022 at 13:56:12
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.numeric_std.all;

LIBRARY audiotest_lib;

ARCHITECTURE struct OF audiotest_TB IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL OHstate          : std_logic_vector(8 DOWNTO 0);
   SIGNAL SSM2603_bclk     : STD_LOGIC;
   SIGNAL SSM2603_cclk     : STD_LOGIC;
   SIGNAL SSM2603_pbdat    : STD_LOGIC;
   SIGNAL SSM2603_pblrc    : STD_LOGIC;
   SIGNAL SSM2603_scl      : STD_LOGIC;
   SIGNAL SSM2603_sda      : STD_LOGIC;
   SIGNAL ack_error        : STD_LOGIC;
   SIGNAL clk              : std_logic;
   SIGNAL data_from_master : std_logic_vector(7 DOWNTO 0);
   SIGNAL data_to_master   : std_logic_vector(7 DOWNTO 0);
   SIGNAL data_valid       : std_logic;
   SIGNAL res_n            : std_logic;
   SIGNAL rst              : std_logic;


   -- Component Declarations
   COMPONENT I2C_minion
   GENERIC (
      MINION_ADDR            : std_logic_vector(6 downto 0);
      -- noisy SCL/SDA lines can confuse the minion
      -- use low-pass filter to smooth the signal
      -- (this might not be necessary!)
      USE_INPUT_DEBOUNCING   : boolean := false;
      -- play with different number of wait cycles
      -- larger wait cycles increase the resource usage
      DEBOUNCING_WAIT_CYCLES : integer := 4
   );
   PORT (
      clk              : IN     std_logic;
      data_to_master   : IN     std_logic_vector (7 DOWNTO 0);
      rst              : IN     std_logic;
      data_from_master : OUT    std_logic_vector (7 DOWNTO 0);
      data_valid       : OUT    std_logic;
      read_req         : OUT    std_logic;
      scl              : INOUT  std_logic;
      sda              : INOUT  std_logic
   );
   END COMPONENT;
   COMPONENT audiotestmain
   PORT (
      clk           : IN     std_logic ;
      res_n         : IN     std_logic ;
      OHstate       : OUT    std_logic_vector (8 DOWNTO 0);
      SSM2603_bclk  : OUT    STD_LOGIC ;
      SSM2603_cclk  : OUT    STD_LOGIC ;
      SSM2603_pbdat : OUT    STD_LOGIC ;
      SSM2603_pblrc : OUT    STD_LOGIC ;
      ack_error     : OUT    STD_LOGIC ;
      SSM2603_scl   : INOUT  STD_LOGIC ;
      SSM2603_sda   : INOUT  STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT clk_res_gen
   PORT (
      clk   : OUT    std_logic;
      res_n : OUT    std_logic
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : I2C_minion USE ENTITY audiotest_lib.I2C_minion;
   FOR ALL : audiotestmain USE ENTITY audiotest_lib.audiotestmain;
   FOR ALL : clk_res_gen USE ENTITY audiotest_lib.clk_res_gen;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 2 eb2
   -- eb1 1
   rst <= not res_n;
   data_to_master <= 8B"0";                                    

   -- HDL Embedded Text Block 3 eb3
   -- eb1 1
   SSM2603_sda <= 'H';
   SSM2603_scl <= 'H';                                    


   -- Instance port mappings.
   U_2 : I2C_minion
      GENERIC MAP (
         MINION_ADDR            => 7X"1A",
         -- noisy SCL/SDA lines can confuse the minion
         -- use low-pass filter to smooth the signal
         -- (this might not be necessary!)
         USE_INPUT_DEBOUNCING   => false,
         -- play with different number of wait cycles
         -- larger wait cycles increase the resource usage
         DEBOUNCING_WAIT_CYCLES => 4
      )
      PORT MAP (
         scl              => SSM2603_scl,
         sda              => SSM2603_sda,
         clk              => clk,
         rst              => rst,
         read_req         => OPEN,
         data_to_master   => data_to_master,
         data_valid       => data_valid,
         data_from_master => data_from_master
      );
   U_3 : audiotestmain
      PORT MAP (
         clk           => clk,
         res_n         => res_n,
         OHstate       => OHstate,
         SSM2603_bclk  => SSM2603_bclk,
         SSM2603_cclk  => SSM2603_cclk,
         SSM2603_pbdat => SSM2603_pbdat,
         SSM2603_pblrc => SSM2603_pblrc,
         ack_error     => ack_error,
         SSM2603_scl   => SSM2603_scl,
         SSM2603_sda   => SSM2603_sda
      );
   U_1 : clk_res_gen
      PORT MAP (
         clk   => clk,
         res_n => res_n
      );

END struct;
